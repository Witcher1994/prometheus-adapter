# Default values for k8s-prometheus-adapter..
affinity: {}

image:
  repository: directxman12/k8s-prometheus-adapter-amd64
  tag: v0.5.0
  pullPolicy: IfNotPresent

logLevel: 4

metricsRelistInterval: 1m

nodeSelector: {}

priorityClassName: ""

# Url to access prometheus
prometheus:
  url: http://prometheus
  port: 9090

replicas: 1

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

resources: {}
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

rules:
  default: true
  custom:
    - name: {as: "image-service-process-cpu"}
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
          kubernetes_namespace: {resource: "namespace"}
          kubernetes_pod_name: {resource: "pod"}
      seriesQuery: 'kube_pod_container_resource_limits_cpu_cores'
      metricsQuery: 'sum(process_cpu_usage{<<.LabelMatchers>>})*(sum(machine_cpu_cores)/sum(<<.Series>>{<<.LabelMatchers>>}))'
    - name:
        as: "image-service-http-request-increase"
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          kubernetes_pod_name: {resource: "pod"}
      seriesQuery: 'http_server_requests_seconds_count'
      metricsQuery: 'increase(<<.Series>>{<<.LabelMatchers>>, uri="/noauth/images/top20"}[2s])'
    - name:
        as: "image-service-response-time-in-second-q-5"
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          kubernetes_pod_name: {resource: "pod"}
      seriesQuery: 'http_response_time_seconds'
      metricsQuery: '<<.Series>>{<<.LabelMatchers>>,quantile="0.5"}*1000'
    - name:
        as: "image-service-response-time-in-second-q-9"
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          kubernetes_pod_name: {resource: "pod"}
      seriesQuery: 'http_response_time_seconds'
      metricsQuery: '<<.Series>>{<<.LabelMatchers>>,quantile="0.9"}*1000'
    - name:
        as: "image-service-response-time-in-second-q-95"
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          kubernetes_pod_name: {resource: "pod"}
      seriesQuery: 'http_response_time_seconds'
      metricsQuery: '<<.Series>>{<<.LabelMatchers>>,quantile="0.95"}*1000'
  # Mounts a configMap with pre-generated rules for use. Overrides the
  # default, custom, external and resource entries
  existing:
  external: []
# - seriesQuery: '{__name__=~"^some_metric_count$"}'
#   resources:
#     template: <<.Resource>>
#   name:
#     matches: ""
#     as: "my_external_metric"
#   metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
  resource:
    cpu:
      containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)
      nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[2m])) by (<<.GroupBy>>)
      resources:
        overrides:
          instance:
            resource: node
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      containerLabel: container_name
    memory:
      containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>}) by (<<.GroupBy>>)
      nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)
      resources:
        overrides:
          instance:
            resource: node
          namespace:
            resource: namespace
          pod_name:
            resource: pod
      containerLabel: container_name
    window: 2m

service:
  annotations: {}
  port: 443
  type: ClusterIP

tls:
  enable: false
  ca: |-
    # Public CA file that signed the APIService
  key: |-
    # Private key of the APIService
  certificate: |-
    # Public key of the APIService

tolerations: []

# Annotations added to the pod
podAnnotations: {}
